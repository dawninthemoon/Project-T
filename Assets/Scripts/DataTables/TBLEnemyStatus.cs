using System;
using System.Collections.Generic;
using UnityEngine;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[AddComponentMenu("BansheeGz/Generated/TBLEnemyStatus")]
public partial class TBLEnemyStatus : BGEntityGo
{
	public override BGMetaEntity MetaConstraint
	{
		get
		{
			return MetaDefault;
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5678017057748086214,8502664407001919410));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	public new System.String name
	{
		get
		{
			return _name[Entity.Index];
		}
		set
		{
			_name[Entity.Index] = value;
		}
	}
	public System.Single moveSpeed
	{
		get
		{
			return _moveSpeed[Entity.Index];
		}
		set
		{
			_moveSpeed[Entity.Index] = value;
		}
	}
	public System.Single minJumpHeight
	{
		get
		{
			return _minJumpHeight[Entity.Index];
		}
		set
		{
			_minJumpHeight[Entity.Index] = value;
		}
	}
	public System.Single maxJumpHeight
	{
		get
		{
			return _maxJumpHeight[Entity.Index];
		}
		set
		{
			_maxJumpHeight[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 moveDetectOffset
	{
		get
		{
			return _moveDetectOffset[Entity.Index];
		}
		set
		{
			_moveDetectOffset[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 moveDetectSize
	{
		get
		{
			return _moveDetectSize[Entity.Index];
		}
		set
		{
			_moveDetectSize[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 attackDetectOffset
	{
		get
		{
			return _attackDetectOffset[Entity.Index];
		}
		set
		{
			_attackDetectOffset[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 attackDetectSize
	{
		get
		{
			return _attackDetectSize[Entity.Index];
		}
		set
		{
			_attackDetectSize[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 platformCheckPos
	{
		get
		{
			return _platformCheckPos[Entity.Index];
		}
		set
		{
			_platformCheckPos[Entity.Index] = value;
		}
	}
	public System.Int32 maxHP
	{
		get
		{
			return _maxHP[Entity.Index];
		}
		set
		{
			_maxHP[Entity.Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName __name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(__name==null || __name.IsDeleted) __name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4754389191886434300,16063906217628222391));
			return __name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __moveSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _moveSpeed
	{
		get
		{
			if(__moveSpeed==null || __moveSpeed.IsDeleted) __moveSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4914523001697751054,558437076329102489));
			return __moveSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __minJumpHeight;
	public static BansheeGz.BGDatabase.BGFieldFloat _minJumpHeight
	{
		get
		{
			if(__minJumpHeight==null || __minJumpHeight.IsDeleted) __minJumpHeight=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5539145356334836820,6711173540710739849));
			return __minJumpHeight;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __maxJumpHeight;
	public static BansheeGz.BGDatabase.BGFieldFloat _maxJumpHeight
	{
		get
		{
			if(__maxJumpHeight==null || __maxJumpHeight.IsDeleted) __maxJumpHeight=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5638697434986177724,16829224106945084057));
			return __maxJumpHeight;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __moveDetectOffset;
	public static BansheeGz.BGDatabase.BGFieldVector2 _moveDetectOffset
	{
		get
		{
			if(__moveDetectOffset==null || __moveDetectOffset.IsDeleted) __moveDetectOffset=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5747331735756656086,3320746928093716134));
			return __moveDetectOffset;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __moveDetectSize;
	public static BansheeGz.BGDatabase.BGFieldVector2 _moveDetectSize
	{
		get
		{
			if(__moveDetectSize==null || __moveDetectSize.IsDeleted) __moveDetectSize=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5075692337743546368,7559170699297928858));
			return __moveDetectSize;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __attackDetectOffset;
	public static BansheeGz.BGDatabase.BGFieldVector2 _attackDetectOffset
	{
		get
		{
			if(__attackDetectOffset==null || __attackDetectOffset.IsDeleted) __attackDetectOffset=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(4858391092339630745,16522775585135925419));
			return __attackDetectOffset;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __attackDetectSize;
	public static BansheeGz.BGDatabase.BGFieldVector2 _attackDetectSize
	{
		get
		{
			if(__attackDetectSize==null || __attackDetectSize.IsDeleted) __attackDetectSize=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5690934996591517823,6615302915134543521));
			return __attackDetectSize;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __platformCheckPos;
	public static BansheeGz.BGDatabase.BGFieldVector2 _platformCheckPos
	{
		get
		{
			if(__platformCheckPos==null || __platformCheckPos.IsDeleted) __platformCheckPos=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5061778677936757359,16005822572342414979));
			return __platformCheckPos;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt __maxHP;
	public static BansheeGz.BGDatabase.BGFieldInt _maxHP
	{
		get
		{
			if(__maxHP==null || __maxHP.IsDeleted) __maxHP=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5630698612195057791,8772543766126285482));
			return __maxHP;
		}
	}
}
